name: Build
on: [push]

jobs:
  build:
    runs-on: windows-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2.1.0
      id: checkout_code
      
    - name: Cache vcpkg packages
      uses: actions/cache@v2
      env:
        cache-name: cache-vcpkg-packages
      with:
        path: vcpkg
        key: vcpkg-cache

    - name: Setup MSBuild
      uses: microsoft/setup-msbuild@v1.0.2
      id: setup_msbuild
      
    - name: Setup vcpkg
      uses: friendlyanon/setup-vcpkg@v1

    - name: Install vcpkg integration
      run: |
        vcpkg update
        vcpkg integrate install
        
    - name: Install OpenCV [world]
      run: vcpkg install opencv3[world]:x64-windows 

    - name: Clear vcpkg downloads
      shell: powershell
      run: |
        Remove-Item -LiteralPath "vcpkg/buildtrees" -Force -Recurse
        Remove-Item -LiteralPath "vcpkg/downloads" -Force -Recurse
      
    - name: Install Boost
      run: vcpkg install boost:x64-windows
      
    - name: Clear vcpkg downloads
      shell: powershell
      run: |
        Remove-Item -LiteralPath "vcpkg/buildtrees" -Force -Recurse
        Remove-Item -LiteralPath "vcpkg/downloads" -Force -Recurse
      
    - name : Install [glm, curlpp, cereal]
      run : vcpkg install glm:x64-windows curlpp:x64-windows cereal:x64-windows
      
    - name : Install [sfml, sfgui, glew]
      run : vcpkg install sfml:x64-windows sfgui:x64-windows glew:x64-windows

    - name : Install [cppzmq, glog]
      run : vcpkg install cppzmq:x64-windows glog:x64-windows

    - name: Clear vcpkg downloads
      shell: powershell
      run: |
        Remove-Item -LiteralPath "vcpkg/buildtrees" -Force -Recurse
        Remove-Item -LiteralPath "vcpkg/downloads" -Force -Recurse

    - name: Install Kinect SDKs
      run: |
        vcpkg install kinectsdk1:x64-windows 
        vcpkg install kinectsdk2:x64-windows 
      
    - name: Setup non-vcpkg dependencies
      run: |
        git clone https://github.com/ValveSoftware/openvr.git/ external/openvr
        git clone https://gitlab.com/libeigen/eigen.git/ external/eigen

    - name: Clone and setup K2APP
      shell: poweshell
      run: |
        git clone https://github.com/KinectToVR/k2vr-application external/KTVR
        New-Item -ItemType Junction -Path external/KTVR/external/openvr -Target external/openvr
        New-Item -ItemType Junction -Path external/KTVR/external/eigen -Target external/eigen

    - name: Build K2API and K2APP's driver
      run: |
        msbuild "/t:KinectToVR_API" "/p:Configuration=Release;Platform=x64;WindowsTargetPlatformVersion=10.0"
        msbuild "/t:Driver_KinectToVR" "/p:Configuration=Release;Platform=x64;WindowsTargetPlatformVersion=10.0"
        
    - name: Remove Kinect library links
      run: |
          sed -i -e 's/Kinect10.lib//g' KinectV1Process/KinectV1Process.vcxproj
          sed -i -e 's/Kinect20.lib//g' KinectV2Process/KinectV2Process.vcxproj
          sed -i -e 's/Kinect10.lib//g' KV1CrashHandler/KV1CrashHandler.vcxproj
          sed -i -e 's/Kinect20.lib//g' KV2CrashHandler/KV2CrashHandler.vcxproj

    - name: Build KinectToVR
      id: run_msbuild_k2vr
      run: msbuild "/p:Configuration=Release;Platform=x64;WindowsTargetPlatformVersion=10.0"

    - name: Get short commit SHA
      id: slug
      run: "$slug = '::set-output name=slug::' + $env:GITHUB_SHA.SubString(0,7); echo $slug"

    - name: Upload Release artifact
      uses: actions/upload-artifact@v2
      with:
        name: Release-${{ steps.slug.outputs.slug }}
        path: x64/Release/
        if-no-files-found: error
